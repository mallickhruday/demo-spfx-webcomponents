/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface OuifButton {
      'disabled': boolean;
      'href': string;
      'primary': boolean;
      'text': string;
    }
  }

  interface HTMLOuifButtonElement extends StencilComponents.OuifButton, HTMLStencilElement {}

  var HTMLOuifButtonElement: {
    prototype: HTMLOuifButtonElement;
    new (): HTMLOuifButtonElement;
  };
  interface HTMLElementTagNameMap {
    'ouif-button': HTMLOuifButtonElement;
  }
  interface ElementTagNameMap {
    'ouif-button': HTMLOuifButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ouif-button': JSXElements.OuifButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface OuifButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'href'?: string;
      'primary'?: boolean;
      'text'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;